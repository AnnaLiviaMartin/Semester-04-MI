spring.application.name=projekt

# JDBC-Datenbank URI: H2 legt DB an mit mem = in-memory DB, mifahrdb = frei wählbarer Name der DB
# bedeutet: DB-Inhalte gehen bei Neustart verloren
#spring.datasource.url=jdbc:h2:mem:mifahrdb
#mit Datenspeichern der DB: jdbc:h2:~/mifahrdb
spring.datasource.url=jdbc:h2:~/mifahrdb
# Benutzer/Passwort setzen
spring.datasource.username=h2
spring.datasource.password=h2

# Automatisch Tabellen etc. aus Entities anlegen
spring.jpa.generate-ddl=true

# Bei jedem Anwendungsstart Datenbank droppen und frisch anlegen
# Im in-memory-Betrieb weniger interessant, spaeter mit DB-Dateien aber schon.
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
# SQL-Logging im Spring-Boot-Log aktivieren zu Guck- und Testzwecken
# im Produktionsbetrieb zu entfernen
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=INFO

# changing localhost port
# server.port=8080
# Link für DB http://localhost:8080/h2-console/

# logging für die security einstellen
logging.level.org.springframework.security=DEBUG